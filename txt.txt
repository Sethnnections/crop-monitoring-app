<!DOCTYPE html>
<html>
<head>
    <title>Fire Monitoring</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol/ol.css">
    <style>
        #map {
            width: 100%;
            height: 500px;
        }
        .risk-indicator {
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        .high-risk { background-color: #ff6b6b; }
        .medium-risk { background-color: #ffd166; }
        .low-risk { background-color: #06d6a0; }
        .heatmap-legend {
            background: white;
            padding: 10px;
            border-radius: 5px;
            position: absolute;
            bottom: 30px;
            right: 10px;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1>Fire Monitoring</h1>
        <div class="row">
            <div class="col-md-8">
                <div id="map"></div>
                <div class="heatmap-legend">
                    <strong>Fire Risk Heatmap</strong>
                    <div style="background: linear-gradient(to right, blue, yellow, red); height: 20px; width: 100%;"></div>
                    <div class="d-flex justify-content-between">
                        <span>Low</span>
                        <span>High</span>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h5>Recent Fire Detections</h5>
                    </div>
                    <div class="card-body">
                        <div id="fire-records">
                            {% for record in records %}
                            <div class="card mb-2">
                                <div class="card-body">
                                    <h6>{{ record.date }}</h6>
                                    <p>Fire Count: {{ record.fire_count }}</p>
                                    <div class="risk-indicator high-risk">
                                        High Risk: {{ "%.2f"|format(record.high_risk) }} ha
                                    </div>
                                    <div class="risk-indicator medium-risk">
                                        Medium Risk: {{ "%.2f"|format(record.medium_risk) }} ha
                                    </div>
                                    <div class="risk-indicator low-risk">
                                        Low Risk: {{ "%.2f"|format(record.low_risk) }} ha
                                    </div>
                                    <button class="btn btn-sm btn-primary mt-2 view-report" 
                                            data-record-id="{{ record.id }}">
                                        View Detailed Report
                                    </button>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/ol/ol.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize map with OpenLayers
        const center = {{ center|tojson }};
        const geojson = {{ geojson|tojson }};
        
        const map = new ol.Map({
            target: 'map',
            layers: [
                new ol.layer.Tile({
                    source: new ol.source.OSM()
                }),
                new ol.layer.Vector({
                    source: new ol.source.Vector({
                        features: new ol.format.GeoJSON().readFeatures(geojson)
                    }),
                    style: new ol.style.Style({
                        stroke: new ol.style.Stroke({
                            color: 'blue',
                            width: 2
                        }),
                        fill: new ol.style.Fill({
                            color: 'rgba(0, 0, 255, 0.1)'
                        })
                    })
                })
            ],
            view: new ol.View({
                center: ol.proj.fromLonLat([center[1], center[0]]),
                zoom: 12
            })
        });

        // Load ArcGIS heatmap layer for fire risk
        function loadHeatmap(recordId) {
            // Remove existing heatmap layer if any
            map.getLayers().forEach(layer => {
                if (layer.get('name') === 'heatmap') {
                    map.removeLayer(layer);
                }
            });

            if (!recordId) return;

            fetch(`/fire-report/${recordId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        const report = data.report;
                        if (report.heatmap_image) {
                            // Create image layer for heatmap
                            const extent = map.getView().calculateExtent(map.getSize());
                            const heatmapLayer = new ol.layer.Image({
                                name: 'heatmap',
                                source: new ol.source.ImageStatic({
                                    url: `data:image/png;base64,${report.heatmap_image}`,
                                    imageExtent: extent,
                                    projection: 'EPSG:3857'
                                }),
                                opacity: 0.7
                            });
                            map.addLayer(heatmapLayer);
                        }
                    }
                });
        }

        // Event listeners for report buttons
        document.querySelectorAll('.view-report').forEach(button => {
            button.addEventListener('click', function() {
                const recordId = this.getAttribute('data-record-id');
                loadHeatmap(recordId);
            });
        });

        // Load most recent report by default
        {% if records %}
            loadHeatmap({{ records[0].id }});
        {% endif %}
    </script>
</body>
</html>